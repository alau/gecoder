/*
 *  Main authors:
 *     Christian Schulte <schulte@gecode.org>
 *
 *  Contributing authors:
 *     Guido Tack <tack@gecode.org>
 *
 *  Copyright:
 *     Christian Schulte, 2004
 *     Guido Tack, 2004
 *
 *  Last modified:
 *     $Date: 2008-02-28 19:55:12 +0100 (Thu, 28 Feb 2008) $ by $Author: tack $
 *     $Revision: 6353 $
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining
 *  a copy of this software and associated documentation files (the
 *  "Software"), to deal in the Software without restriction, including
 *  without limitation the rights to use, copy, modify, merge, publish,
 *  distribute, sublicense, and/or sell copies of the Software, and to
 *  permit persons to whom the Software is furnished to do so, subject to
 *  the following conditions:
 *
 *  The above copyright notice and this permission notice shall be
 *  included in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

/* How to tell the compiler to really, really inline */
#undef forceinline

/* Heap memory alignment */
#undef GECODE_MEMORY_ALIGNMENT

/* Whether integer variables are built */
#undef GECODE_HAS_INT_VARS

/* Whether set variables are built */
#undef GECODE_HAS_SET_VARS

/* Whether bdd variables are built */
#undef GECODE_HAS_CPLTSET_VARS

/* Whether we are compiling static libraries */
#undef GECODE_STATIC_LIBS

/* Whether we have mtrace for memory leak debugging*/
#undef GECODE_HAS_MTRACE

/* Whether gcc understands visibility attributes */
#undef GECODE_GCC_HAS_CLASS_VISIBILITY

/* Whether to include audit code */
#undef GECODE_AUDIT

/* Whether serialization support is built */
#undef GECODE_HAS_SERIALIZATION

/* Whether to compile with boost serialization support */
#undef GECODE_HAS_BOOST_SERIALIZATION

/* Whether Qt is available */
#undef GECODE_HAS_QT

/* Whether Gist is available */
#undef GECODE_HAS_GIST

// STATISTICS: support-any
