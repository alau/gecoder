---
title: Home
long_title: Gecode/R, constraint programming in Ruby
inMenu: false
description: A Ruby interface to the Gecode constraint programming library.
template: frontpage.template
---

h1. Gecode/R - constraint programming in Ruby

<div class="summary">
<p>Gecode/R is a Ruby interface to "Gecode":http://www.gecode.org/, an open 
source library for constraint programming. The interface is intended for people 
with no previous experience of constraint programming, aiming to be easy to 
pick up and use in practice.</p>
</div>

h2. Describe your problem

Constraint programming is a technique where you just *describe the problem* and 
then let the *solver find solutions* for you.

Solve the equation system @x + y = z@, @x = y - 3@, @0 <= x,y,z <= 9@.

<ruby>
class ExampleProblem < Gecode::Model
  attr :variables
  def initialize
    # Set up the variables, three integers with domain 0..9.
    x,y,z = @variables = int_var_array(3, 0..9) 
    
    # Describe the problem (in this case the equations).
    (x + y).must == z 
    x.must == y - 3
    
    # Tell it what the variables of the problem are.
    branch_on @variables
  end
end
</ruby>

All we then need to do to find a solution is to ask.

<ruby>
puts 'x y z'
puts ExampleProblem.new.solve!.variables.values.join(' ')
</ruby>

Output:
<pre>
x y z
0 3 3
</pre>

The equation system is no harder to solve than to describe. But many problems 
are *simpler to describe than to solve*, causing constraint programming to be 
a quick way of solving them. {example: {name: sudoku, 
linkText: Sudoku}} is one of many "examples":examples/index.html.
